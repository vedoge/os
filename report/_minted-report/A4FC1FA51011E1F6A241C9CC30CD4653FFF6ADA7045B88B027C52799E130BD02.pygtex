\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}arch/i386/interrupts.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}ifndef \PYGZus{}\PYGZus{}VGA\PYGZus{}H}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}hw/vga/vga.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}endif}
\PYG{c+cm}{/* }
\PYG{c+cm}{ * whatever is commented out below was formerly used for testing,}
\PYG{c+cm}{ * but is now superseded by an actual keyboard driver in i8042.c }
\PYG{c+cm}{ * that also implements the requisite ISR}
\PYG{c+cm}{ */}
\PYG{c+cm}{/*}
\PYG{c+cm}{\PYGZsh{}include \PYGZlt{}hw/i8259/i8259.h\PYGZgt{}}
\PYG{c+cm}{\PYGZsh{}include \PYGZlt{}arch/i386/io.h\PYGZgt{}}
\PYG{c+cm}{*/}
\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{lidt}\PYG{p}{(}\PYG{n}{idt\PYGZus{}entry}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{n}{idt}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{idtr\PYGZus{}t}\PYG{+w}{ }\PYG{n}{idtr}\PYG{p}{;}
\PYG{+w}{	}\PYG{n}{idt\PYGZus{}entry}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{n}{ranger}\PYG{p}{;}\PYG{+w}{ }
\PYG{+w}{	}\PYG{k}{while}\PYG{p}{(}\PYG{n}{ranger}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{options\PYGZus{}byte}\PYG{p}{)}\PYG{+w}{ }\PYG{n}{ranger}\PYG{o}{++}\PYG{p}{;}
\PYG{+w}{	}
\PYG{+w}{	}\PYG{n}{idtr}\PYG{p}{.}\PYG{n}{table}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{idt}\PYG{p}{;}
\PYG{+w}{	}\PYG{n}{idtr}\PYG{p}{.}\PYG{n}{length}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{ranger}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{n}{idt}\PYG{p}{)}\PYG{o}{/}\PYG{l+m+mi}{8\PYGZhy{}1}\PYG{p}{;}
\PYG{+w}{	}\PYG{k}{asm}\PYG{+w}{ }\PYG{k}{volatile}\PYG{+w}{ }\PYG{p}{(}\PYG{l+s}{\PYGZdq{}lidt (\PYGZpc{}0)\PYGZdq{}}\PYG{+w}{ }\PYGZbs{}
\PYG{+w}{			}\PYG{o}{:}\PYG{+w}{ }\PYG{c+cm}{/* no output */}\PYG{+w}{ }\PYGZbs{}
\PYG{+w}{			}\PYG{o}{:}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}r\PYGZdq{}}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{idtr}\PYG{p}{)}\PYG{+w}{ }\PYGZbs{}
\PYG{+w}{			}\PYG{o}{:}\PYG{+w}{ }\PYG{c+cm}{/* no clobber */}\PYG{+w}{ }\PYGZbs{}
\PYG{+w}{			}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{return}\PYG{p}{;}\PYG{+w}{ }

\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{set\PYGZus{}idt\PYGZus{}entry}\PYG{p}{(}\PYG{n}{idt\PYGZus{}entry}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{n}{idt}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{uint16\PYGZus{}t}\PYG{+w}{ }\PYG{n}{selector}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{uint8\PYGZus{}t}\PYG{+w}{ }\PYG{n}{dpl}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{uint8\PYGZus{}t}\PYG{+w}{ }\PYG{n}{gate\PYGZus{}type}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{void}\PYG{+w}{ }\PYG{o}{*}\PYG{n}{off}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{idt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{offset\PYGZus{}low}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{uint16\PYGZus{}t}\PYG{p}{)((}\PYG{k+kt}{uint32\PYGZus{}t}\PYG{p}{)}\PYG{n}{off}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{l+m+mh}{0xffff}\PYG{p}{);}\PYG{+w}{	}\PYG{c+cm}{/*low word */}
\PYG{+w}{	}\PYG{n}{idt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{offset\PYGZus{}high}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{uint16\PYGZus{}t}\PYG{p}{)((}\PYG{k+kt}{uint32\PYGZus{}t}\PYG{p}{)}\PYG{n}{off}\PYG{+w}{ }\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{+w}{ }\PYG{l+m+mi}{16}\PYG{p}{);}\PYG{+w}{	}\PYG{c+cm}{/* high word */}
\PYG{+w}{	}\PYG{n}{idt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{reserved}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{		}\PYG{c+cm}{/* DO NOT TOUCH */}
\PYG{+w}{	}\PYG{n}{idt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{selector}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{selector}\PYG{p}{;}\PYG{+w}{		}\PYG{c+cm}{/* selector*/}
\PYG{+w}{	}\PYG{n}{idt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{options\PYGZus{}byte}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{7}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{dpl}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+m+mi}{5}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{gate\PYGZus{}type}\PYG{p}{;}
\PYG{+w}{	}\PYG{k}{return}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{n}{\PYGZus{}\PYGZus{}attribute\PYGZus{}\PYGZus{}}\PYG{p}{((}\PYG{n}{interrupt}\PYG{p}{))}\PYG{+w}{ }\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{generic\PYGZus{}interrupt\PYGZus{}handler}\PYG{p}{(}\PYG{n}{isr\PYGZus{}savedregs}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{n}{u}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{c+cm}{/* this works but is an annoyance at best. Replace with device }
\PYG{c+cm}{	 * driver ISR at the soonest}
\PYG{c+cm}{	 */}
\PYG{+w}{	}\PYG{c+cm}{/* \PYGZus{}\PYGZus{}asm\PYGZus{}\PYGZus{} volatile (\PYGZdq{}hlt\PYGZdq{}); */}
\PYG{+w}{	}\PYG{n}{vga\PYGZus{}puts}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Interrupt}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{l+m+mh}{0x4f}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{return}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{init\PYGZus{}interrupts}\PYG{p}{(}\PYG{n}{idt\PYGZus{}entry}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{  }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{idt}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{c+cm}{/* faulty pointer arithmetic was the culprit here \PYGZhy{} ptr+i increments ptr by i*sizeof(*ptr)}
\PYG{c+cm}{	 * as opposed to just plain old i; using i*sizeof(ptr) as the index here was causing only}
\PYG{c+cm}{	 * every eighth interrupt to be enabled, leading to triple faults upon calling ISR 0x33, }
\PYG{c+cm}{	 * for example. }
\PYG{c+cm}{	 * Silly mistake \PYGZhy{} shows just how rusty I am with C.}
\PYG{c+cm}{	 */}
\PYG{+w}{	}\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}=}\PYG{+w}{ }\PYG{n}{NR\PYGZus{}INTERRUPTS}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{set\PYGZus{}idt\PYGZus{}entry}\PYG{p}{((}\PYG{n}{idt}\PYG{o}{+}\PYG{n}{i}\PYG{p}{),}\PYG{l+m+mh}{0x8}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x0}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{INTERRUPT\PYGZus{}GATE}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{generic\PYGZus{}interrupt\PYGZus{}handler}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\PYG{c+cm}{/* }
\PYG{c+cm}{ * whatever is below was formerly used for testing, but is now superseded}
\PYG{c+cm}{ * by an actual keyboard driver under i8042.c that also implements }
\PYG{c+cm}{ * the requisite ISR}
\PYG{c+cm}{ */}
\PYG{c+cm}{/*}
\PYG{c+cm}{\PYGZus{}\PYGZus{}attribute\PYGZus{}\PYGZus{}((interrupt)) void kbd\PYGZus{}interrupt\PYGZus{}handler(isr\PYGZus{}savedregs * u) \PYGZob{}}
\PYG{c+cm}{	uint8\PYGZus{}t garbag;}
\PYG{c+cm}{	inb (0x64,garbag);}
\PYG{c+cm}{	vga\PYGZus{}puts(\PYGZdq{}Keyboard interrupt\PYGZbs{}n\PYGZdq{},0x5f);}
\PYG{c+cm}{	eoi(1);}
\PYG{c+cm}{\PYGZcb{}}
\PYG{c+cm}{*/}
\end{Verbatim}
