\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{; caps = real mode code}
\PYG{c+c1}{; lowercase = pmode / paged code}
\PYG{k}{bits}\PYG{+w}{ }\PYG{l+m+mi}{16}
\PYG{k}{org}\PYG{+w}{ }\PYG{l+m+mh}{0xC000}
\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{n+nv}{entry16}




\PYG{c+c1}{; data area}
\PYG{+w}{	}\PYG{n+nl}{FNAME:}\PYG{+w}{ }\PYG{k+kd}{DB}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}KERNEL  BIN\PYGZdq{}}
\PYG{+w}{	}\PYG{n+nl}{CLUST:}\PYG{+w}{ }\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mi}{0}
\PYG{c+c1}{; general definitions}
\PYG{+w}{	}\PYG{n+no}{stage2\PYGZus{}base}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0xc000}\PYG{+w}{	}\PYG{c+c1}{; where we are}
\PYG{+w}{	}\PYG{n+no}{pt\PYGZus{}base}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x1000}\PYG{+w}{	}\PYG{c+c1}{; where our page tables begin}
\PYG{+w}{	}\PYG{n+no}{pt\PYGZus{}ceil}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x6ffc}\PYG{+w}{	}\PYG{c+c1}{; where our page tables end}
\PYG{+w}{	}\PYG{n+no}{ROOTDIRENTRIES}\PYG{+w}{	}\PYG{k+kd}{EQU}\PYG{+w}{ }\PYG{l+m+mi}{224}\PYG{+w}{		}\PYG{c+c1}{; no. of FAT rootdir entries}
\PYG{+w}{	}\PYG{n+no}{kern\PYGZus{}base}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x40000}\PYG{+w}{	}\PYG{c+c1}{; phys / idpaged kernel addr}
\PYG{+w}{	}\PYG{n+no}{vga\PYGZus{}off}\PYG{+w}{ 	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0xb8000}\PYG{+w}{	}\PYG{c+c1}{; vga mmio text buffer addr}
\PYG{c+c1}{; elf definitions}

\PYG{c+c1}{; ELF header}

\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}ident}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{+w}{		}\PYG{c+c1}{; 0	begins 0x7f \PYGZsq{}E\PYGZsq{} \PYGZsq{}L\PYGZsq{} \PYGZsq{}F\PYGZsq{}}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}type}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x10}\PYG{+w}{	}\PYG{c+c1}{; 16	must be 2 (no relocations)}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}machine}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x12}\PYG{+w}{	}\PYG{c+c1}{; 18	must be 0x03 for us}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}version}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x14}\PYG{+w}{	}\PYG{c+c1}{; 20	must be 1}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}entry}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x18}\PYG{+w}{	}\PYG{c+c1}{; 24}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}phoff}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x1c}\PYG{+w}{	}\PYG{c+c1}{; 28}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}shoff}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x20}\PYG{+w}{	}\PYG{c+c1}{; 32}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}flags}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x24}\PYG{+w}{	}\PYG{c+c1}{; 36}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}ehsize}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x28}\PYG{+w}{	}\PYG{c+c1}{; 40}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}phentsize}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x2a}\PYG{+w}{	}\PYG{c+c1}{; 42}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}phnum}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x2c}\PYG{+w}{	}\PYG{c+c1}{; 44}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}shentsize}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x2e}\PYG{+w}{	}\PYG{c+c1}{; 46}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}shnum}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x30}\PYG{+w}{	}\PYG{c+c1}{; 48}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}shstrndx}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x32}\PYG{+w}{	}\PYG{c+c1}{; 50}
\PYG{+w}{	}\PYG{n+no}{e\PYGZus{}ehdrend}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x34}\PYG{+w}{	}\PYG{c+c1}{; 52}

\PYG{c+c1}{; program header}

\PYG{+w}{	}\PYG{n+no}{p\PYGZus{}type}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x0}
\PYG{+w}{	}\PYG{n+no}{p\PYGZus{}offset}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x4}
\PYG{+w}{	}\PYG{n+no}{p\PYGZus{}vaddr}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x8}
\PYG{+w}{	}\PYG{n+no}{p\PYGZus{}paddr}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0xc}
\PYG{+w}{	}\PYG{n+no}{p\PYGZus{}filesz}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x10}
\PYG{+w}{	}\PYG{n+no}{p\PYGZus{}memsz}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x14}
\PYG{+w}{	}\PYG{n+no}{p\PYGZus{}flags}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x18}
\PYG{+w}{	}\PYG{n+no}{p\PYGZus{}align}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x1c}
\PYG{+w}{	}\PYG{n+no}{p\PYGZus{}size}\PYG{+w}{		}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x20}

\PYG{c+c1}{; PIC offsets }
\PYG{+w}{	}\PYG{n+no}{pic1\PYGZus{}com}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x20}
\PYG{+w}{	}\PYG{n+no}{pic1\PYGZus{}data}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0x21}
\PYG{+w}{	}\PYG{n+no}{pic2\PYGZus{}com}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0xa0}
\PYG{+w}{	}\PYG{n+no}{pic2\PYGZus{}data}\PYG{+w}{	}\PYG{k+kd}{equ}\PYG{+w}{ }\PYG{l+m+mh}{0xa1}

\PYG{n+nl}{entry16:}\PYG{+w}{				}\PYG{c+c1}{; load the kernel ELF at 0x40000}
\PYG{+w}{	}\PYG{c+c1}{; copied from the bootloader}
\PYG{n+nl}{READROOTDIR:}
\PYG{+w}{	}\PYG{n+nf}{PUSH}\PYG{+w}{ }\PYG{l+m+mh}{0x07E0}
\PYG{+w}{	}\PYG{n+nf}{POP}\PYG{+w}{ }\PYG{n+nb}{ES}
\PYG{+w}{	}\PYG{n+nf}{PUSH}\PYG{+w}{ }\PYG{n+nb}{CS}
\PYG{+w}{	}\PYG{n+nf}{POP}\PYG{+w}{ }\PYG{n+nb}{DS}\PYG{+w}{			}\PYG{c+c1}{; ensure CS=DS (for proper addressing of the kernel filename at DS:SI)}
\PYG{+w}{	}\PYG{n+nf}{XOR}\PYG{+w}{ }\PYG{n+nb}{DI}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{DI}\PYG{+w}{		}\PYG{c+c1}{; ES:DI}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{CX}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nv}{ROOTDIRENTRIES}\PYG{c+c1}{; loop through all the root entries available (224 in this case) }
\PYG{+w}{	}\PYG{n+nf}{XOR}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{+w}{		}\PYG{c+c1}{; AX is our offset}

\PYG{n+nl}{SEARCH:}
\PYG{+w}{	}\PYG{n+nf}{PUSH}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{+w}{			}\PYG{c+c1}{; store offset at beginning of code}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{SI}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nv}{FNAME}\PYG{+w}{	}\PYG{c+c1}{; DS:SI contains reference string, ES:DI points to root dir.}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{11}
\PYG{+w}{	}\PYG{n+nf}{XCHG}\PYG{+w}{ }\PYG{n+nb}{CX}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{+w}{		}\PYG{c+c1}{; exchange loop indices (entry is stored safely in DX, while CX is used by REP)}
\PYG{n+nf}{REP}\PYG{+w}{	}\PYG{n+nv}{CMPSB}\PYG{+w}{			}\PYG{c+c1}{; compare the CX characters at DS:SI and ES:DI}
\PYG{+w}{	}\PYG{n+nf}{JE}\PYG{+w}{ }\PYG{n+nv}{LOADFAT}\PYG{+w}{		}\PYG{c+c1}{; exit the loop if equal (we have a match safely in ES:DI)}

\PYG{+w}{	}\PYG{n+nf}{POP}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{+w}{			}\PYG{c+c1}{; if not, prepare to offset the index.}
\PYG{+w}{	}\PYG{n+nf}{ADD}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{32}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{DI}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{+w}{		}\PYG{c+c1}{; next entry}
\PYG{+w}{	}\PYG{n+nf}{XCHG}\PYG{+w}{ }\PYG{n+nb}{CX}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{+w}{		}\PYG{c+c1}{; external index (looping through the root directory entries themselves)}
\PYG{n+nf}{LOOP}\PYG{+w}{	}\PYG{n+nv}{SEARCH}
\PYG{n+nl}{LOADFAT:}\PYG{+w}{			}\PYG{c+c1}{; find the kernel cluster}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{ES}\PYG{p}{:}\PYG{n+nb}{DI}\PYG{o}{+}\PYG{l+m+mh}{0xF}\PYG{p}{]}\PYG{+w}{	}\PYG{c+c1}{; 11 (file length) + 15 (random info) = 26 (cluster offset)}
\PYG{+w}{	}\PYG{n+nf}{PUSH}\PYG{+w}{ }\PYG{n+nb}{AX}
\PYG{n+nl}{SETUP:}\PYG{+w}{				}\PYG{c+c1}{; setup to read kernel}
\PYG{+w}{	}\PYG{c+c1}{; define the segmentation of the kernel. }
\PYG{+w}{	}\PYG{n+nf}{PUSH}\PYG{+w}{ }\PYG{l+m+mh}{0x09A0}\PYG{+w}{		}\PYG{c+c1}{; FAT location}
\PYG{+w}{	}\PYG{n+nf}{POP}\PYG{+w}{ }\PYG{n+nb}{DS}\PYG{+w}{			}\PYG{c+c1}{; in DS}
\PYG{+w}{	}\PYG{n+nf}{PUSH}\PYG{+w}{ }\PYG{l+m+mh}{0x4000}\PYG{+w}{	}\PYG{c+c1}{; kernel loaded at 40000 (610 KiB limit)}
\PYG{+w}{	}\PYG{n+nf}{POP}\PYG{+w}{ }\PYG{n+nb}{ES}\PYG{+w}{			}\PYG{c+c1}{; in ES}
\PYG{+w}{	}\PYG{n+nf}{XOR}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{+w}{		}\PYG{c+c1}{; buffer address pointer is ES:0}

\PYG{n+nl}{LOAD:}\PYG{+w}{				}\PYG{c+c1}{; load the kernel file into memory}
\PYG{+w}{	}\PYG{n+nf}{POP}\PYG{+w}{ }\PYG{n+nb}{AX}
\PYG{+w}{	}\PYG{n+nf}{PUSH}\PYG{+w}{ }\PYG{n+nb}{AX}

\PYG{+w}{	}\PYG{n+nf}{ADD}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{31}\PYG{+w}{		}\PYG{c+c1}{; offset to cope with the way LBACHS calculates (LBA 34 = first data sector)}
\PYG{+w}{	}\PYG{n+nf}{CALL}\PYG{+w}{ }\PYG{n+nv}{LBACHS}\PYG{+w}{		}\PYG{c+c1}{; put things in the right places}

\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{AH}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x02}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{AL}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x01}
\PYG{+w}{	}\PYG{n+nf}{INT}\PYG{+w}{ }\PYG{l+m+mh}{0x13}

\PYG{+w}{	}\PYG{n+nf}{ADD}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x200}\PYG{+w}{		}\PYG{c+c1}{; bump buffer address pointer by 512 bytes}

\PYG{+w}{	}\PYG{n+nf}{POP}\PYG{+w}{ }\PYG{n+nb}{AX}

\PYG{+w}{	}\PYG{n+nf}{PUSH}\PYG{+w}{ }\PYG{n+nb}{BX}
\PYG{+w}{	}\PYG{n+nf}{XOR}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{+w}{		}\PYG{c+c1}{; zero upper byte}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{3}
\PYG{+w}{	}\PYG{n+nf}{MUL}\PYG{+w}{ }\PYG{n+nb}{BX}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{DIV}\PYG{+w}{ }\PYG{n+nb}{BX}
\PYG{+w}{	}\PYG{n+nf}{POP}\PYG{+w}{ }\PYG{n+nb}{BX}

\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{SI}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{AX}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{DS}\PYG{p}{:}\PYG{n+nb}{SI}\PYG{p}{]}\PYG{+w}{		}\PYG{c+c1}{; for copying and comparing}
\PYG{+w}{	}\PYG{n+nf}{OR}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}
\PYG{+w}{	}\PYG{n+nf}{JZ}\PYG{+w}{ }\PYG{n+nv}{EVEN}
\PYG{n+nl}{ODD:}
\PYG{+w}{	}\PYG{n+nf}{SHR}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{4}\PYG{+w}{		}\PYG{c+c1}{; low nibble is part of another entry}
\PYG{+w}{	}\PYG{c+c1}{; fallthrough, but it makes no difference anyways. }
\PYG{n+nl}{EVEN:}
\PYG{+w}{	}\PYG{n+nf}{AND}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x0FFF}\PYG{+w}{		}\PYG{c+c1}{; high nibble is part of another entry}
\PYG{+w}{	}\PYG{n+nf}{CMP}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x0FF0}
\PYG{+w}{	}\PYG{n+nf}{JGE}\PYG{+w}{ }\PYG{n+nv}{LOADED}
\PYG{+w}{	}\PYG{n+nf}{PUSH}\PYG{+w}{ }\PYG{n+nb}{AX}\PYG{+w}{			}\PYG{c+c1}{; save cluster for next iteration}
\PYG{+w}{	}\PYG{n+nf}{JMP}\PYG{+w}{ }\PYG{n+nv}{LOAD}\PYG{+w}{ }
\PYG{n+nl}{LBACHS:}\PYG{+w}{				}\PYG{c+c1}{; convert LBA to CHS addressing for INT 13h}
\PYG{+w}{	}\PYG{c+c1}{; function is specific to 3.5\PYGZdq{} diskette format and must be modified to fit larger and more general disks. }
\PYG{+w}{	}\PYG{c+c1}{; puts CHS parameters in the right place for INT 0x13 to use}
\PYG{+w}{	}\PYG{n+nf}{PUSH}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{+w}{		}\PYG{c+c1}{; put away BX as a garbage register}
\PYG{+w}{	}\PYG{c+c1}{; there seems to be a problem here}
\PYG{+w}{	}\PYG{n+nf}{XOR}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{+w}{	}\PYG{c+c1}{; ensure high word is not set else 32\PYGZhy{}bit division}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{18}\PYG{+w}{	}\PYG{c+c1}{; sectors per track \PYGZhy{} some memory clashes happen here that need to be sorted out!}
\PYG{+w}{			}\PYG{c+c1}{; methinks the BIOS parameter block is overwritten by the stack. }
\PYG{+w}{	}\PYG{n+nf}{DIV}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{+w}{		}\PYG{c+c1}{; remainder ranges between 0 and 17 (DX = sector \PYGZhy{} 1)}
\PYG{+w}{	}\PYG{n+nf}{INC}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{+w}{		}\PYG{c+c1}{; add 1 to make it 1\PYGZhy{}18 for proper addressing}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{CL}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{DL}\PYG{+w}{	}\PYG{c+c1}{; put in place}
\PYG{+w}{	}\PYG{n+nf}{XOR}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{DX}\PYG{+w}{	}\PYG{c+c1}{; ensure high word is not set, else 32\PYGZhy{}bit division}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{+w}{	}\PYG{c+c1}{; calculate head and cylidner}
\PYG{+w}{	}\PYG{n+nf}{DIV}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{+w}{		}\PYG{c+c1}{; double\PYGZhy{}sided hence the divide}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{DH}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{DL}\PYG{+w}{	}\PYG{c+c1}{; remainder is the head (where we are supposed to be), 0 or 1}
\PYG{+w}{	}\PYG{n+nf}{MOV}\PYG{+w}{ }\PYG{n+nb}{CH}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{AL}\PYG{+w}{	}\PYG{c+c1}{; quotient is our cylinder (how far out we are supposed to be)}
\PYG{+w}{	}\PYG{n+nf}{XOR}\PYG{+w}{ }\PYG{n+nb}{DL}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{DL}\PYG{+w}{	}\PYG{c+c1}{; zero real quick}
\PYG{+w}{	}\PYG{n+nf}{POP}\PYG{+w}{ }\PYG{n+nb}{BX}\PYG{+w}{		}\PYG{c+c1}{; restore old BX}
\PYG{+w}{	}\PYG{n+nf}{RET}\PYG{+w}{		}\PYG{c+c1}{; bye}


\PYG{n+nl}{LOADED:}\PYG{+w}{				}\PYG{c+c1}{; arrange kernel in memory}
\PYG{+w}{	}\PYG{c+c1}{; jump into protected mode}
\PYG{+w}{	}\PYG{c+c1}{; put the gdt into place}
\PYG{+w}{	}\PYG{c+c1}{; page}
\PYG{+w}{	}\PYG{c+c1}{; put the elf into a loadable format}
\PYG{+w}{	}\PYG{c+c1}{; jump there}
\PYG{+w}{	}\PYG{n+nf}{cli}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{l+m+mi}{0}
\PYG{+w}{	}\PYG{n+nf}{pop}\PYG{+w}{ }\PYG{n+nb}{ds}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{n+nb}{ds}\PYG{+w}{			}\PYG{c+c1}{; whoops \PYGZhy{} forgot these! Doesn\PYGZsq{}t work otherwise :)}
\PYG{+w}{	}\PYG{n+nf}{pop}\PYG{+w}{ }\PYG{n+nb}{es}
\PYG{+w}{	}\PYG{n+nf}{lidt}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{idtr}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{lgdt}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{gdtr}\PYG{p}{]}\PYG{+w}{ }
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{cr0}
\PYG{+w}{	}\PYG{n+nf}{or}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{1}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{cr0}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{l+m+mh}{0x8}\PYG{p}{:}\PYG{n+nv}{start}\PYG{+w}{		}\PYG{c+c1}{; reload CS and begin execution in 32\PYGZhy{}bit mode}
\PYG{k}{bits}\PYG{+w}{ }\PYG{l+m+mi}{32}
\PYG{n+nl}{start:}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x10}\PYG{+w}{		}\PYG{c+c1}{; segment selectors}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ds}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{es}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{fs}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ss}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{esp}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0xf000}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ebp}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{esp}
\PYG{c+c1}{;	mov esi, message}
\PYG{c+c1}{;	call vgaprint}
\PYG{+w}{	}\PYG{c+c1}{; PIC initialisation}
\PYG{+w}{	}\PYG{c+c1}{; PIC masks are not saved as they will be masked and set up later}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x11}\PYG{+w}{ 		}\PYG{c+c1}{; ICW1\PYGZus{}INIT | ICW1\PYGZus{}ICW4}
\PYG{+w}{	}\PYG{n+nf}{out}\PYG{+w}{ }\PYG{n+nv}{pic1\PYGZus{}com}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{al}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{out}\PYG{+w}{ }\PYG{n+nv}{pic2\PYGZus{}com}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{al}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}

\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x20}\PYG{+w}{		}\PYG{c+c1}{; IVT offset: PIC1 (0x20\PYGZhy{}0x27)}
\PYG{+w}{	}\PYG{n+nf}{out}\PYG{+w}{ }\PYG{n+nv}{pic1\PYGZus{}data}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{al}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{or}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x08}\PYG{+w}{		}\PYG{c+c1}{; IVT offset: PIC2 (0x28\PYGZhy{}0x2f)}
\PYG{+w}{	}\PYG{n+nf}{out}\PYG{+w}{ }\PYG{n+nv}{pic2\PYGZus{}data}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{al}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}

\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x04}\PYG{+w}{		}\PYG{c+c1}{;ICW3: tell first PIC identity}
\PYG{+w}{	}\PYG{n+nf}{out}\PYG{+w}{ }\PYG{n+nv}{pic1\PYGZus{}data}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{+w}{ }
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x02}\PYG{+w}{		}\PYG{c+c1}{;ICW3: tell second PIC identity}
\PYG{+w}{	}\PYG{n+nf}{out}\PYG{+w}{ }\PYG{n+nv}{pic2\PYGZus{}data}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{al}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}

\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x01}\PYG{+w}{		}\PYG{c+c1}{; ICW4: x86 mode}
\PYG{+w}{	}\PYG{n+nf}{out}\PYG{+w}{ }\PYG{n+nv}{pic1\PYGZus{}data}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{+w}{	}\PYG{c+c1}{; pic1 in x86 mode}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{out}\PYG{+w}{ }\PYG{n+nv}{pic2\PYGZus{}data}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{+w}{	}\PYG{c+c1}{; pic2 also}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}

\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0xff}
\PYG{+w}{	}\PYG{n+nf}{out}\PYG{+w}{ }\PYG{n+nv}{pic1\PYGZus{}data}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{+w}{	}\PYG{c+c1}{; mask all interrupts while we set up}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{k+kc}{\PYGZdl{}}\PYG{o}{+}\PYG{l+m+mi}{2}
\PYG{+w}{	}\PYG{n+nf}{out}\PYG{+w}{ }\PYG{n+nv}{pic2\PYGZus{}data}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{+w}{	}\PYG{c+c1}{;same for pic2}

\PYG{c+c1}{; paging code}
\PYG{+w}{	}\PYG{n+nf}{std}\PYG{+w}{			}\PYG{c+c1}{; ensure that rep stosd goes downwards in memory (faster and easier to process)}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{edi}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x0ffc}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x00000002}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{edi}
\PYG{+w}{	}\PYG{n+nf}{shr}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{+w}{		}\PYG{c+c1}{; ecx = ecx div 4}
\PYG{+w}{	}\PYG{n+nf}{inc}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{+w}{			}\PYG{c+c1}{; include 0th entry}
\PYG{n+nf}{rep}\PYG{+w}{	}\PYG{n+nv}{stosd}\PYG{+w}{			}\PYG{c+c1}{; rep stosd}
\PYG{+w}{	}\PYG{c+c1}{; the range 0x0000\PYGZhy{}0x0fff now contains 1000 not\PYGZhy{}present page directory entries}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{edi}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nv}{pt\PYGZus{}ceil}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{edi}
\PYG{+w}{	}\PYG{n+nf}{sub}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nv}{pt\PYGZus{}base}
\PYG{+w}{	}\PYG{n+nf}{shl}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{10}\PYG{+w}{		}\PYG{c+c1}{; ecx = page frame / bits 31\PYGZhy{}12 of physaddr}
\PYG{+w}{	}\PYG{n+nf}{shr}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{12}\PYG{+w}{		}\PYG{c+c1}{; net shift right of 2 (division by 4 of the pointer)}

\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{highest\PYGZus{}phys\PYGZus{}frame}\PYG{p}{],}\PYG{+w}{ }\PYG{n+nb}{ecx}
\PYG{+w}{				}\PYG{c+c1}{; store the highest mapped physical frame }
\PYG{+w}{	}\PYG{n+nf}{inc}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{+w}{			}\PYG{c+c1}{; for entry 0}

\PYG{c+c1}{;	hlt			; NOTE DEBUGGING STOP}
\PYG{n+nl}{.loop:}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{ecx}
\PYG{+w}{	}\PYG{n+nf}{dec}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{+w}{			}\PYG{c+c1}{; so 0x0 is mapped to 0x0 and not pt\PYGZus{}base}
\PYG{+w}{	}\PYG{n+nf}{shl}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{12}\PYG{+w}{		}\PYG{c+c1}{; 3 nibbles left (eax = ecx * 4KiB)}
\PYG{+w}{	}\PYG{n+nf}{or}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x03}\PYG{+w}{		}\PYG{c+c1}{; mark present and writable}
\PYG{+w}{	}\PYG{n+nf}{stosd}
\PYG{n+nf}{loop}\PYG{+w}{	}\PYG{n+nv}{.loop}

\PYG{c+c1}{;	cli}
\PYG{c+c1}{;	hlt			; NOTE DEBUGGING STOP}
\PYG{c+c1}{; page directory code}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nv}{stage2\PYGZus{}base}
\PYG{+w}{	}\PYG{n+nf}{sub}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nv}{pt\PYGZus{}base}
\PYG{+w}{	}\PYG{n+nf}{shr}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0xc}
\PYG{+w}{	}\PYG{n+nf}{lea}\PYG{+w}{ }\PYG{n+nb}{edi}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{ecx}\PYG{o}{*}\PYG{l+m+mi}{4}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{4}\PYG{p}{]}
\PYG{n+nl}{.repeat:}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{ecx}
\PYG{+w}{	}\PYG{n+nf}{shl}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{12}
\PYG{+w}{	}\PYG{n+nf}{or}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{3}
\PYG{+w}{	}\PYG{n+nf}{stosd}
\PYG{+w}{	}\PYG{n+nf}{loop}\PYG{+w}{ }\PYG{n+nv}{.repeat}

\PYG{c+c1}{;	hlt			; NOTE DEBUGGING STOP}
\PYG{c+c1}{;	switch to paged}
\PYG{+w}{	}\PYG{c+c1}{; load base of page directory into cr3}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{cr3}
\PYG{+w}{	}\PYG{n+nf}{xor}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{ecx}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{cr3}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{+w}{		}\PYG{c+c1}{; flush tlb}
\PYG{+w}{	}\PYG{c+c1}{; enable PG bit in cr0}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{cr0}
\PYG{+w}{	}\PYG{n+nf}{or}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x80000000}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{cr0}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{+w}{		}\PYG{c+c1}{; PG\PYGZus{}ENABLE}
\PYG{+w}{	}\PYG{n+nf}{jmp}\PYG{+w}{ }\PYG{l+m+mh}{0x8}\PYG{p}{:}\PYG{n+nv}{pg\PYGZus{}enabled}
\PYG{n+nl}{pg\PYGZus{}enabled:}
\PYG{+w}{	}\PYG{c+c1}{; if we page fault now, we\PYGZsq{}re toast}

\PYG{+w}{	}\PYG{n+nf}{cli}
\PYG{+w}{	}\PYG{c+c1}{; show something on screen (debugging purposes)}
\PYG{c+c1}{;	mov esi, paged}
\PYG{c+c1}{;	call vgaprint}
\PYG{c+c1}{;	hlt			; NOTE DEBUGGING STOP}
\PYG{c+c1}{; mark all pages in the first 4 mb as allocated (set least significant avl bit)}
\PYG{+w}{	}\PYG{n+nf}{std}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{edi}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x1000}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x400}
\PYG{n+nl}{.loop:}
\PYG{+w}{	}\PYG{c+c1}{; actually use all options available in x86 addressing likeaboss}
\PYG{+w}{	}\PYG{n+nf}{or}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{edi}\PYG{o}{+}\PYG{n+nb}{ecx}\PYG{o}{*}\PYG{l+m+mi}{4}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{4}\PYG{p}{],}\PYG{+w}{ }\PYG{l+m+mh}{0x203}
\PYG{+w}{	}\PYG{n+nf}{loop}\PYG{+w}{ }\PYG{n+nv}{.loop}
\PYG{c+c1}{; check elf magic number}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{esi}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x40000}\PYG{+w}{	}\PYG{c+c1}{; location of file we loaded in RealMode}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{n+nb}{esi}\PYG{+w}{ 		}\PYG{c+c1}{; save it for later}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{edi}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nv}{elf\PYGZus{}mag}\PYG{+w}{	}\PYG{c+c1}{; elf magic number for comparing}
\PYG{+w}{	}\PYG{n+nf}{cld}\PYG{+w}{			}\PYG{c+c1}{; compare forwards in memory}
\PYG{+w}{	}\PYG{n+nf}{cmpsd}\PYG{+w}{			}\PYG{c+c1}{; speed}
\PYG{+w}{	}\PYG{n+nf}{jne}\PYG{+w}{ }\PYG{n+nv}{noelf}
\PYG{+w}{	}\PYG{n+nf}{std}
\PYG{+w}{	}\PYG{n+nf}{pop}\PYG{+w}{ }\PYG{n+nb}{esi}
\PYG{c+c1}{;	hlt			; NOTE DEBUGGING STOP}
\PYG{c+c1}{; prepare to loop through the program header table}
\PYG{c+c1}{;	hlt			; NOTE DEBUGGING STOP}
\PYG{+w}{	}\PYG{n+nf}{movzx}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{word}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nv}{e\PYGZus{}phnum}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nv}{e\PYGZus{}phoff}\PYG{p}{]}\PYG{+w}{	}\PYG{c+c1}{; store program header offset}
\PYG{+w}{	}\PYG{n+nf}{lea}\PYG{+w}{ }\PYG{n+nb}{esi}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nb}{eax}\PYG{o}{*}\PYG{l+m+mi}{1}\PYG{o}{\PYGZhy{}}\PYG{n+nv}{p\PYGZus{}size}\PYG{p}{]}
\PYG{+w}{				}\PYG{c+c1}{; get the effective address of the ph table\PYGZhy{}32}
\PYG{n+nl}{phdr:}
\PYG{+w}{	}\PYG{n+nf}{add}\PYG{+w}{ }\PYG{n+nb}{esi}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nv}{p\PYGZus{}size}\PYG{+w}{		}\PYG{c+c1}{; search next table}
\PYG{+w}{	}\PYG{n+nf}{cmp}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{p}{],}\PYG{+w}{ }\PYG{l+m+mi}{1}
\PYG{+w}{	}\PYG{n+nf}{je}\PYG{+w}{ }\PYG{n+nv}{.loadseg}
\PYG{+w}{	}\PYG{n+nf}{loopnz}\PYG{+w}{ }\PYG{n+nv}{phdr}\PYG{+w}{		}\PYG{c+c1}{; null/unknown entry, ignore}
\PYG{+w}{	}\PYG{c+c1}{; error\PYGZhy{} a segment that shouldn\PYGZsq{}t be here}
\PYG{n+nl}{.loadseg:}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{n+nb}{ecx}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{n+nb}{esi}\PYG{+w}{ }
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nv}{p\PYGZus{}align}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nv}{p\PYGZus{}memsz}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nv}{p\PYGZus{}vaddr}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{call}\PYG{+w}{ }\PYG{n+nv}{modify\PYGZus{}page\PYGZus{}table}\PYG{+w}{	}\PYG{c+c1}{; modify the page table to fit the kernel layout}

\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nv}{p\PYGZus{}align}\PYG{p}{]}\PYG{+w}{	}\PYG{c+c1}{; alignment (most probably, page alignment}
\PYG{+w}{				}\PYG{c+c1}{; as specified in the linker script)}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nv}{p\PYGZus{}filesz}\PYG{p}{]}\PYG{+w}{ }
\PYG{+w}{	}\PYG{n+nf}{xor}\PYG{+w}{ }\PYG{n+nb}{edx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{edx}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{4}
\PYG{+w}{	}\PYG{n+nf}{div}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{+w}{			}\PYG{c+c1}{; need remainder in edx}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{edi}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nv}{p\PYGZus{}vaddr}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{esi}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nv}{p\PYGZus{}offset}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{add}\PYG{+w}{ }\PYG{n+nb}{esi}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x40000}
\PYG{+w}{	}\PYG{n+nf}{cld}
\PYG{+w}{	}\PYG{n+nf}{rep}\PYG{+w}{ }\PYG{n+nv}{movsd}\PYG{+w}{		}\PYG{c+c1}{; move in dwords}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{edx}
\PYG{+w}{	}\PYG{n+nf}{rep}\PYG{+w}{ }\PYG{n+nv}{movsb}
\PYG{+w}{	}\PYG{n+nf}{std}
\PYG{+w}{	}\PYG{n+nf}{pop}\PYG{+w}{ }\PYG{n+nb}{esi}\PYG{+w}{			}\PYG{c+c1}{; return to rightful place}
\PYG{+w}{	}\PYG{n+nf}{pop}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{+w}{			}\PYG{c+c1}{; return loop index}
\PYG{+w}{	}\PYG{n+nf}{loop}\PYG{+w}{ }\PYG{n+nv}{phdr}\PYG{+w}{		}\PYG{c+c1}{; next entry}

\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{esi}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x40000}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{l+m+mh}{0x8}\PYG{+w}{		}\PYG{c+c1}{; code segment, DPL=0}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{esi}\PYG{o}{+}\PYG{n+nv}{e\PYGZus{}entry}\PYG{p}{]}\PYG{c+c1}{; e\PYGZus{}entry}
\PYG{+w}{	}\PYG{n+nf}{retf}\PYG{+w}{			}\PYG{c+c1}{; far return (far calls triple fault for whatever reason)}
\PYG{+w}{	}

\PYG{c+c1}{; subroutines and data}


\PYG{n+nl}{noelf:}

\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{esi}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nv}{elferror}
\PYG{+w}{	}\PYG{n+nf}{call}\PYG{+w}{ }\PYG{n+nv}{vgaprint}

\PYG{+w}{	}\PYG{n+nf}{cli}
\PYG{+w}{	}\PYG{n+nf}{hlt}\PYG{+w}{		}\PYG{c+c1}{; end}
\PYG{n+nl}{modify\PYGZus{}page\PYGZus{}table:}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{n+nb}{ebp}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ebp}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{esp}
\PYG{+w}{	}\PYG{c+c1}{; first, compute the number of pages}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{ebp}\PYG{o}{+}\PYG{l+m+mi}{12}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{shr}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{12}\PYG{+w}{		}\PYG{c+c1}{; divide by 0x1000 (4KiB, one page)}
\PYG{+w}{	}\PYG{n+nf}{inc}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{.nr\PYGZus{}pages}\PYG{p}{],}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{c+c1}{; get virtual address and compute the page directory entry first}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{ebp}\PYG{o}{+}\PYG{l+m+mi}{8}\PYG{p}{]}\PYG{+w}{	}\PYG{c+c1}{; p\PYGZus{}vaddr}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{ebp}\PYG{o}{+}\PYG{l+m+mi}{16}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{neg}\PYG{+w}{ }\PYG{n+nb}{ebx}
\PYG{+w}{	}\PYG{n+nf}{and}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{+w}{		}\PYG{c+c1}{; probably unnecessary but}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{+w}{		}\PYG{c+c1}{; push it}
\PYG{+w}{	}\PYG{c+c1}{; now compute the page directory entry}
\PYG{+w}{	}\PYG{n+nf}{and}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0xffc00000}\PYG{+w}{	}\PYG{c+c1}{; top 10 bits, mark present \PYGZam{} writable}
\PYG{+w}{	}\PYG{n+nf}{shr}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x16}\PYG{+w}{		}\PYG{c+c1}{; turn into index for page directory}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{eax}\PYG{o}{*}\PYG{l+m+mi}{4}\PYG{p}{],}\PYG{+w}{ }\PYG{p}{((}\PYG{n+nv}{pt\PYGZus{}ceil}\PYG{o}{+}\PYG{l+m+mi}{4}\PYG{p}{)}\PYG{o}{|}\PYG{l+m+mi}{3}\PYG{p}{)}
\PYG{+w}{				}\PYG{c+c1}{; store configured ceiling + 4 and present / writable}
\PYG{+w}{	}\PYG{n+nf}{pop}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{and}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{l+m+mh}{0x003ff000}\PYG{+w}{	}\PYG{c+c1}{; bits 21\PYGZhy{}12}
\PYG{+w}{	}\PYG{n+nf}{shr}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{12}\PYG{+w}{		}\PYG{c+c1}{; get page frame}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{highest\PYGZus{}phys\PYGZus{}frame}\PYG{p}{]}
\PYG{+w}{				}\PYG{c+c1}{; assign to first unassigned physical frame}
\PYG{+w}{	}\PYG{n+nf}{shl}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{12}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{n+nb}{ecx}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{.nr\PYGZus{}pages}\PYG{p}{]}
\PYG{+w}{				}\PYG{c+c1}{; nr of pages to allocate for segment}
\PYG{+w}{	}\PYG{n+nf}{lea}\PYG{+w}{ }\PYG{n+nb}{edi}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nb}{eax}\PYG{o}{*}\PYG{l+m+mi}{4}\PYG{o}{+}\PYG{n+nv}{pt\PYGZus{}ceil}\PYG{o}{+}\PYG{l+m+mi}{4}\PYG{p}{]}
\PYG{n+nl}{.loop:}\PYG{+w}{				}\PYG{c+c1}{; allocate nr\PYGZus{}pages}
\PYG{+w}{	}\PYG{n+nf}{add}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x1000}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{+w}{		}
\PYG{+w}{	}\PYG{n+nf}{or}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{3}\PYG{+w}{		}\PYG{c+c1}{; present and writable}
\PYG{+w}{	}\PYG{n+nf}{cld}
\PYG{+w}{	}\PYG{n+nf}{stosd}
\PYG{+w}{	}\PYG{n+nf}{std}
\PYG{+w}{	}\PYG{n+nf}{loop}\PYG{+w}{ }\PYG{n+nv}{modify\PYGZus{}page\PYGZus{}table.loop}
\PYG{+w}{	}\PYG{c+c1}{;endloop}
\PYG{+w}{	}\PYG{n+nf}{shr}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{12}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{highest\PYGZus{}phys\PYGZus{}frame}\PYG{p}{],}\PYG{+w}{ }\PYG{n+nb}{ebx}
\PYG{+w}{				}\PYG{c+c1}{; store the highest physical frame mapped}
\PYG{+w}{	}\PYG{n+nf}{pop}\PYG{+w}{ }\PYG{n+nb}{ecx}

\PYG{n+nl}{.done:}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{esp}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{ebp}\PYG{+w}{		}\PYG{c+c1}{; quickly clean up garbage on stack}
\PYG{+w}{	}\PYG{n+nf}{pop}\PYG{+w}{ }\PYG{n+nb}{ebp}
\PYG{+w}{	}\PYG{n+nf}{std}
\PYG{+w}{	}\PYG{n+nf}{ret}\PYG{+w}{ }\PYG{l+m+mi}{12}\PYG{+w}{			}\PYG{c+c1}{; free 12 bytes from stack (avail on 386+)}
\PYG{n+nl}{.nr\PYGZus{}pages:}\PYG{+w}{ }\PYG{k+kd}{dd}\PYG{+w}{ }\PYG{l+m+mh}{00h}\PYG{+w}{		}\PYG{c+c1}{; store nr\PYGZus{}pages to allocate per segment}


\PYG{c+c1}{; PMode data/subroutines area}
\PYG{n+nl}{message:}
\PYG{+w}{	}\PYG{k+kd}{db}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}h\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}e\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}l\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}l\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}o\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}!\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0xa}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}

\PYG{n+nl}{paged:}\PYG{+w}{	}\PYG{k+kd}{db}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}p\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}a\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}g\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}e\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}d\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0xa}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0xa}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}

\PYG{n+nl}{elferror:}
\PYG{+w}{	}\PYG{k+kd}{db}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}u\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}n\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}k\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}n\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}o\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}w\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}
\PYG{+w}{	}\PYG{k+kd}{db}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}n\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{} \PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}s\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}e\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}g\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}m\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}
\PYG{+w}{	}\PYG{k+kd}{db}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}e\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}n\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}t\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}!\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0x8f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}

\PYG{n+nl}{elf\PYGZus{}mag:}
\PYG{+w}{	}\PYG{k+kd}{db}\PYG{+w}{ }\PYG{l+m+mh}{0x7f}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}E\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}L\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}F\PYGZsq{}}\PYG{+w}{ }



\PYG{n+nl}{vgaprint:}
\PYG{+w}{	}\PYG{n+nf}{cli}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{push}\PYG{+w}{ }\PYG{n+nb}{ebx}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{.idx}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{lea}\PYG{+w}{ }\PYG{n+nb}{edi}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{vga\PYGZus{}off}\PYG{o}{+}\PYG{n+nb}{eax}\PYG{o}{*}\PYG{l+m+mi}{2}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{xor}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{ecx}
\PYG{+w}{	}\PYG{n+nf}{not}\PYG{+w}{ }\PYG{n+nb}{ecx}
\PYG{+w}{	}\PYG{n+nf}{cld}
\PYG{n+nl}{.loop:}
\PYG{+w}{	}
\PYG{+w}{	}\PYG{n+nf}{lodsw}
\PYG{+w}{	}\PYG{n+nf}{cmp}\PYG{+w}{ }\PYG{n+nb}{ax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}
\PYG{+w}{	}\PYG{n+nf}{je}\PYG{+w}{ }\PYG{n+nv}{.done}
\PYG{+w}{	}\PYG{n+nf}{cmp}\PYG{+w}{ }\PYG{n+nb}{al}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0xa}\PYG{+w}{		}\PYG{c+c1}{;\PYGZbs{}n}
\PYG{+w}{	}\PYG{n+nf}{je}\PYG{+w}{ }\PYG{n+nv}{.newline}
\PYG{+w}{	}\PYG{n+nf}{stosw}
\PYG{+w}{	}\PYG{n+nf}{inc}\PYG{+w}{ }\PYG{k+kt}{word}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{.idx}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{loop}\PYG{+w}{ }\PYG{n+nv}{.loop}

\PYG{n+nl}{.newline:}
\PYG{+w}{	}\PYG{c+c1}{;hlt			; DEBUGGING STOP}


\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{.idx}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{80}
\PYG{+w}{	}\PYG{n+nf}{xor}\PYG{+w}{ }\PYG{n+nb}{edx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{edx}\PYG{+w}{		}\PYG{c+c1}{; note: \PYGZdq{}div r/m32\PYGZdq{} uses edx:eax}
\PYG{+w}{	}\PYG{n+nf}{div}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{+w}{			}\PYG{c+c1}{; as its implicit operand, so zero it.}
\PYG{+w}{	}\PYG{n+nf}{cmp}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{25}\PYG{+w}{		}\PYG{c+c1}{; end of screen}

\PYG{c+c1}{;	cmovge eax, 0		; would simplify this structure, but cmovcc is}
\PYG{+w}{				}\PYG{c+c1}{; P/K5+ only}

\PYG{+w}{	}\PYG{n+nf}{jge}\PYG{+w}{ }\PYG{n+nv}{.wrapscr}\PYG{+w}{		}\PYG{c+c1}{; print starting from next row col 0 again}

\PYG{+w}{	}\PYG{n+nf}{add}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{+w}{		}\PYG{c+c1}{; next line (remainder is discarded)}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{80}
\PYG{+w}{	}\PYG{n+nf}{xor}\PYG{+w}{ }\PYG{n+nb}{edx}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{edx}

\PYG{+w}{	}\PYG{n+nf}{mul}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{+w}{			}\PYG{c+c1}{; need to zero edx here also for \PYGZdq{}mul r/m32\PYGZdq{}}


\PYG{+w}{	}\PYG{n+nf}{lea}\PYG{+w}{ }\PYG{n+nb}{edi}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{vga\PYGZus{}off}\PYG{o}{+}\PYG{n+nb}{eax}\PYG{o}{*}\PYG{l+m+mi}{2}\PYG{p}{]}\PYG{c+c1}{; load our new pointer}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{.idx}\PYG{p}{],}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{+w}{	}\PYG{c+c1}{; store as idx}
\PYG{+w}{	}\PYG{n+nf}{loop}\PYG{+w}{ }\PYG{n+nv}{vgaprint.loop}\PYG{+w}{	}\PYG{c+c1}{; affect ecx (count as character) }

\PYG{n+nl}{.wrapscr:}
\PYG{+w}{	}\PYG{n+nf}{xor}\PYG{+w}{ }\PYG{n+nb}{eax}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{mov}\PYG{+w}{ }\PYG{k+kt}{dword}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{.idx}\PYG{p}{],}\PYG{+w}{ }\PYG{n+nb}{eax}
\PYG{+w}{	}\PYG{n+nf}{lea}\PYG{+w}{ }\PYG{n+nb}{edi}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[}\PYG{n+nv}{vga\PYGZus{}off}\PYG{o}{+}\PYG{n+nb}{eax}\PYG{o}{*}\PYG{l+m+mi}{2}\PYG{p}{]}
\PYG{+w}{	}\PYG{n+nf}{loop}\PYG{+w}{ }\PYG{n+nv}{vgaprint.loop}\PYG{+w}{		}\PYG{c+c1}{; clobber ecx (count as character)}

\PYG{n+nl}{.done:}
\PYG{+w}{	}\PYG{n+nf}{neg}\PYG{+w}{ }\PYG{n+nb}{ecx}
\PYG{+w}{	}\PYG{n+nf}{dec}\PYG{+w}{ }\PYG{n+nb}{ecx}\PYG{+w}{			}\PYG{c+c1}{; account for the \PYGZhy{}1}

\PYG{+w}{	}\PYG{n+nf}{pop}\PYG{+w}{ }\PYG{n+nb}{ebx}\PYG{+w}{			}\PYG{c+c1}{; also restore}
\PYG{+w}{	}\PYG{n+nf}{pop}\PYG{+w}{ }\PYG{n+nb}{eax}

\PYG{+w}{	}\PYG{n+nf}{std}

\PYG{+w}{	}\PYG{n+nf}{ret}
\PYG{n+nl}{.idx:}\PYG{+w}{ }\PYG{k+kd}{dd}\PYG{+w}{ }\PYG{l+m+mi}{0}

\PYG{n+nl}{highest\PYGZus{}phys\PYGZus{}frame:}\PYG{+w}{ }\PYG{k+kd}{dd}\PYG{+w}{ }\PYG{l+m+mi}{0}


\PYG{n+nl}{gdt:}
\PYG{+w}{	}\PYG{k+kd}{DQ}\PYG{+w}{ }\PYG{l+m+mi}{0}

\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0xFFFF}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0x0000}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0x9A00}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0x00C0}

\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0xFFFF}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0x0000}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0x9200}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0x00C0}

\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0xFFFF}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0x0000}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0xFA00}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0x00C0}

\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0xFFFF}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0x0000}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0xF200}
\PYG{+w}{	}\PYG{k+kd}{DW}\PYG{+w}{ }\PYG{l+m+mh}{0x00C0}
\PYG{c+c1}{; need task state segment}
\PYG{n+nl}{gdtr:}
\PYG{+w}{	}\PYG{k+kd}{dw}\PYG{+w}{ }\PYG{n+nv}{gdtr}\PYG{o}{\PYGZhy{}}\PYG{n+nv}{gdt}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}
\PYG{+w}{	}\PYG{k+kd}{dd}\PYG{+w}{ }\PYG{n+nv}{gdt}

\PYG{n+nl}{idtr:}\PYG{+w}{	}\PYG{k+kd}{dw}\PYG{+w}{ }\PYG{l+m+mi}{0}
\PYG{+w}{	}\PYG{k+kd}{dq}\PYG{+w}{ }\PYG{l+m+mi}{0}

\PYG{n+nl}{end:}
\end{Verbatim}
